<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmallManager</name>
    </assembly>
    <members>
        <member name="F:SmallManagerSpace.Forms.TipMessageBoxcs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Forms.TipMessageBoxcs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SmallManagerSpace.Forms.TipMessageBoxcs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SmallManagerSpace.Resources.DefineEntity">
            <summary>
            存放用户自定义数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.ComData.InitImportData">
            <summary>
            初始化导入融合的公共数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.ComData.InitCommonData(DevComponents.DotNetBar.TabControl,System.String)">
            <summary>
            初始化程序运行的公共数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.ComData.InitImportFileData(System.String)">
            <summary>
            初始化程序运行的公共数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.ComData.InitBaseData">
            <summary>
            初始化程序运行的Base
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.ComData.InitEnumSturctContainer">
            <summary>
            Enum Struct 公共数据建立数据容器对象
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.ComData.InitImportPathAndFileData(System.String)">
            <summary>
            初始化导入合并文件路径
            </summary>
            <param name="PathFileName"></param>
        </member>
        <member name="T:SmallManagerSpace.Resources.BaseEntity">
            <summary>
            用于存储base文件中的数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.CreateStructEntity">
            <summary>
             创建对象
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.GetEntryVarValue(SmallManagerSpace.Resources.StructEntity)">
            <summary>
            得到StructEntity对象中的所有preinput="entry"的变量的value值
            </summary>
            <param name="sEntity">对象名</param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.GetEntryVarChildValue(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Object)">
            <summary>
            得到StructEntity对象中子节点的所有preinput="entry"的变量的value值
            </summary>
            <param name="keyValues">存储值的变量</param>
            <param name="ob">对象名</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.GetRealNodeType(System.String)">
            <summary>
            得到类型
            </summary>
            <param name="typeString"></param>
            <returns>"base","enum","struct","undefine"</returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.CreateCustomStruct(System.Collections.Generic.List{SmallManagerSpace.Resources.DefineEntity})">
            <summary>
            创建customStruct对象
            </summary>
            <param name="defineEntitys"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.TraversalAddItem(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            填充customStruct对象的数据
            </summary>
            <param name="destList"></param>
            <param name="sourceList"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.XmlDeSerializeToEnumObj(System.String,System.String)">
            <summary>
            将xml文件化为Enum对象数据序列
            </summary>
            <param name="Path"></param>
            <param name="enumItemsFileName"></param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.XmlDeSerializeToStructObj(System.String,System.String)">
            <summary>
             将xml文件化为Struct对象数据序列
            </summary>
            <param name="Path"></param>
            <param name="StructItemsFileName"></param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.UpdateValueOfStructItem(SmallManagerSpace.Resources.StructItem,System.String,System.String)">
            <summary>
             修改StructItem中数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.UpdateValueOfParameterItem(SmallManagerSpace.Resources.StructItem,System.String,System.String)">
            <summary>
             修改ParameterItem中数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.AddValueOfStructItem(System.Collections.Generic.List{System.Object},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            增加StructItem
            </summary>
            <param name="higherNode"></param>
            <param name="CID"></param>
            <param name="type"></param>
            <param name="name"></param>
            <param name="indexS"></param>
            <param name="preinput"></param>
            <param name="note"></param>
            <param name="nodetype"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.StructFunction.AddValueOfParameterItem(SmallManagerSpace.Resources.StructItem,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            增加ParameterItem
            </summary>
            <param name="higherNode"></param>
            <param name="CID"></param>
            <param name="type"></param>
            <param name="preinput"></param>
            <param name="name"></param>
            <param name="indexS"></param>
            <param name="range"></param>
            <param name="value"></param>
            <param name="length"></param>
            <param name="note"></param>
            <param name="nodetype"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.ElementStyleSetting">
            <summary>
            初始化节点和元素风格
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AdvTreeSkinSet(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            设置Advtree的颜色主题
            </summary>
            <param name="BackColor"></param>
            <param name="ColumnsBackColor"></param>
            <param name="AlternateRowColor"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AdvTreeSetting">
            <summary>
            设置该页的名称，树的列，图片，字体等
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AdvTreeBeforeCellEdit(System.Object,System.EventArgs)">
            <summary>
            保存选中节点的数据
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AdvTreeAfterCellEditComplete(System.Object,System.EventArgs)">
            <summary>
            处理Value列变更后的操作
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.GetSelectedNodeCell(DevComponents.AdvTree.Node,System.String)">
            <summary>
            得到选中节点列名的元胞
            </summary>
            <param name="node"></param>
            <param name="ColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.getNodeType(DevComponents.AdvTree.Node)">
            <summary>
            得到节点类型
            </summary>
            <param name="node"></param>
            <returns>enum,base,struct</returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.GetTraversalModifiedStructNode(DevComponents.AdvTree.Node,System.Int32)">
            <summary>
            修改节点列表的index 和添加嵌入控件combox
            </summary>
            <param name="node">节点</param>
            <param name="setIndex">下标</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.GetTraversalModifiedBaseEnumNode(DevComponents.AdvTree.Node,System.Int32)">
            <summary>
            修改节点列表的index 和添加嵌入控件combox
            </summary>
            <param name="node">节点</param>
            <param name="setIndex">下标</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.DeletetNode(DevComponents.AdvTree.Node,DevComponents.AdvTree.Node,System.String,System.Int32,System.Int32)">
            <summary>
            遍历删除Struct节点
            </summary>
            <param name="RootN">根节点</param>
            <param name="SelectNode">选择节点</param>
            <param name="preinputName">预输入名</param>
            <param name="require">当前数量</param>
            <param name="diff">需要数量（正数）</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AddStructNode(DevComponents.AdvTree.Node,DevComponents.AdvTree.Node,System.String,System.Int32,System.Int32)">
            <summary>
            遍历添加Struct节点
            </summary>
            <param name="RootN">根节点</param>
            <param name="SelectNode">选择节点</param>
            <param name="preinputName">预输入名</param>
            <param name="require">当前数量</param>
            <param name="diff">需要数量（正数）</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AddBaseEnumNode(DevComponents.AdvTree.Node,DevComponents.AdvTree.Node,System.String,System.Int32,System.Int32)">
            <summary>
            添加base,enum节点
            </summary>
            <param name="RootN"></param>
            <param name="selectedNode"></param>
            <param name="preinputName"></param>
            <param name="require"></param>
            <param name="diff"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.TraverslAddBaseEnumNode(DevComponents.AdvTree.Node,DevComponents.AdvTree.Node,System.String,System.Int32,System.Int32)">
            <summary>
            遍历添加base,enum节点
            </summary>
            <param name="RootN"></param>
            <param name="selectedNode"></param>
            <param name="preinputName"></param>
            <param name="require"></param>
            <param name="diff"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.SelectNodeGruopByType(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DevComponents.AdvTree.Node}},System.String)">
            <summary>
            过滤指定类型的节点
            </summary>
            <param name="nodes">原节点列表</param>
            <param name="nodeType">nodtetype:struct,enum,base</param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.SelectNodeGruopByType(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DevComponents.AdvTree.Node}},System.String[])">
            <summary>
            过滤指定类型的节点
            </summary>
            <param name="nodes">原节点列表</param>
            <param name="nodeTypeArr">nodtetype:struct,enum,base</param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.NodeGroupBySameParent(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DevComponents.AdvTree.Node}},System.String)">
            <summary>
            根据同父分组节点（name,preinput,name,index）都相同则为同父亲
            </summary>
            <param name="nodes">原节点列表</param>
            <param name="selectParentNodeKey">选择节点父节点key</param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.NodeGroupByCellHeaderName(DevComponents.AdvTree.Node[],System.String)">
            <summary>
            根据列名称分组节点
            </summary>
            <param name="nodes">原节点列表</param>
            <param name="name">列名</param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.UpdateEntryVarValue(System.String,System.Int32)">
            <summary>
            更新entry变量的新值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.AddEntryVar(System.String,System.String)">
            <summary>
            注册entry变量的新值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.GetAddNodeCount(DevComponents.AdvTree.Node,System.String,System.String)">
            <summary>
            判断是否需要变更树的节点
            </summary>
            <param name="selectedNode">选择的节点</param>
            <param name="PreinputName">匹配变量名称</param>
            <param name="CurrentValue">选择的节点值</param>
            <returns>等于0:不需要更新树的节点</returns>
            <returns>小于0:需要删除树的节点</returns>
            <returns>大于0:需要添加树的节点</returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeObj.GetSelectedColumnData(DevComponents.AdvTree.Node)">
            <summary>
            得到选择节点的列名称和数据
            </summary>
            <param name="node"></param>
            <returns>"D(columnName,value)"</returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeToEntity.GetEntityByAdvTreeNode(DevComponents.AdvTree.AdvTree)">
            <summary>
            将AdvTree节点数据转换为obj
            </summary>
            <param name="advTree">输入树结构</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeToEntity.TraversalTreeNode(System.Collections.Generic.List{System.Object},DevComponents.AdvTree.Node)">
            <summary>
            遍历树节点
            </summary>
            <param name="nodeList"></param>
            <param name="inNode"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeToEntity.GetStructItemEntity(DevComponents.AdvTree.Node,System.Int32)">
            <summary>
            得到struct Obj
            </summary>
            <param name="node"></param>
            <param name="CID"></param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.GUIVsEntity.AdvTreeToEntity.GetParameterEntity(DevComponents.AdvTree.Node,System.Int32)">
            <summary>
            得到parameter Obj
            </summary>
            <param name="node"></param>
            <param name="CID"></param>
            <returns></returns>
        </member>
        <member name="T:SmallManagerSpace.Resources.EntitySerialize">
            <summary>
            XML序列化公共处理类
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.EntitySerialize.XmlSerializeOnFile``1(``0)">
            <summary>
            将实体对象转换成XML文件
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="obj">实体对象</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.EntitySerialize.XmlSerializeOnString``1(``0,System.String)">
            <summary>
            将实体对象转换成XML
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="obj">实体对象</param>
            <param name="fileFullName">文件路径</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.EntitySerialize.DESerializerOnFile``1(System.String)">
            <summary>
            将XML文件转换成实体对象
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:SmallManagerSpace.Resources.EntitySerialize.DESerializerOnString``1(System.String)">
            <summary>
            将XML转换成实体对象
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="strXML">XML</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.EnumFunction.XmlDeSerializeToEnumObj(System.String,System.String)">
            <summary>
             将xml文件化为对象数据序列
            </summary>
            <param name="Path"></param>
            <param name="EnumItemsFileName"></param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.EnumFunction.addValueOfEnumOfsimpleTypeItem(System.String,System.String,System.String)">
            <summary>
            添加子项目到对象实体中
            </summary>
            <param name="enValue"></param>
            <param name="cnValue"></param>
            <param name="valueValue"></param>
        </member>
        <member name="M:SmallManagerSpace.Resources.EnumFunction.addValueOfsimpleTypeItemWithout(System.String,System.String,System.String)">
            <summary>
             添加数据到simpleType，除enumeration部分
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.EnumFunction.updateValueOfsimpleTypeItem(System.String,System.String)">
            <summary>
             修改simpleTypeItem数据
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.EventLogClass.SaveErrorEventLog(System.String,System.String,System.String)">
            *****第二种*******/
        </member>
        <member name="M:SmallManagerSpace.Resources.EntityVsFile.GetLengthOfType(System.String)">
            <summary>
            得到匹配的基本类型，enum类型的长度
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:SmallManagerSpace.Resources.EntityVsFile.GetCppFileFromEntityByT4(System.String)">
            <summary>
            通过t4模板得到cpp文件
            </summary>
            <param name="GenFileFullName">生成文件名</param>
        </member>
        <member name="M:SmallManagerSpace.Resources.EntityVsFile.GetHeaderFileFromEntityByT4(System.String)">
            <summary>
            通过t4模板得到h文件
            </summary>
            <param name="GenFileFullName">生成文件名</param>
        </member>
        <member name="T:SmallManagerSpace.Resources.TextTemplate.GetCppString">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppString.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppString.GetBoardNum">
            得到BoardNum数量
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppString.GetPointerName(System.String)">
            得到pointerName
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppString.GenerateTextToFunction(System.String,System.String,System.String)">
            生成字符串入口函数
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppString.GroupSameObject(System.Collections.Generic.List{System.Object})">
            将parameter struct对象分别放入不同队列
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppString.TraversalStructItem(System.Object,System.String,System.Boolean,System.Int32)">
            遍历得到树形结构字符串
        </member>
        <member name="T:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetCppStringBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:SmallManagerSpace.Resources.TextTemplate.GetHeaderString">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderString.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderString.GenerateEnumText">
            生成枚举体定义
        </member>
        <member name="F:SmallManagerSpace.Resources.TextTemplate.GetHeaderString.lastName">
            生成结构体定义
        </member>
        <member name="T:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Resources.TextTemplate.GetHeaderStringBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="M:SmallManagerSpace.Resources.XmlVsEntity.XmlVsBase.GetBaseElementString(System.Xml.Linq.XElement)">
            <summary>
            通过文件根节点得到数据
            </summary>
            <param name="xRootElements">文件根节点</param>
            <returns>返回数据列表</returns>
        </member>
        <member name="T:SmallManagerSpace.Raws.Resource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.Base_Enum">
             <summary>
               查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;xsd:schema xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xdo=&quot;urn:pxp&quot; xmlns:ms=&quot;urn:schemas-microsoft-com:xslt&quot; xmlns:stack=&quot;urn:anything&quot; xmlns:xdb=&quot;http://xmlns.oracle.com/xdb&quot; xmlns:w=&quot;http://www.fiberhome.com.cn/board/control&quot;&gt;  
              &lt;xsd:simpleType name=&quot;TIME4BYTE&quot;&gt;
                &lt;xsd:restriction base=&quot;xsd:hexBinary&quot;&gt;
                  &lt;xsd:length value=&quot;4&quot;/&gt;
                &lt;/xsd:restriction&gt;
              &lt;/xsd:simpleType&gt;
              &lt;xsd:simpleType name=&quot;configBlockName&quot;&gt;
                &lt;xsd:restriction base=&quot;xsd [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.BlockIco">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.Enum">
             <summary>
               查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-16&quot;?&gt;
            
            &lt;xsd:schema xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xdo=&quot;urn:pxp&quot; xmlns:ms=&quot;urn:schemas-microsoft-com:xslt&quot; xmlns:stack=&quot;urn:anything&quot; xmlns:xdb=&quot;http://xmlns.oracle.com/xdb&quot; xmlns:w=&quot;http://www.fiberhome.com.cn/board/control&quot;&gt;  
              &lt;!--***********************简单类型***********************--&gt;
              &lt;xsd:simpleType name=&quot;IMA_Clock_Mode&quot;&gt;
                &lt;xsd:restriction base=&quot;xsd:byte&quot;&gt;
                  &lt;xsd:length value=&quot;1&quot;/&gt;
                  &lt;xsd:enumeration w:en=&quot;Sys_Clock&quot; w:cn=&quot;系统时钟&quot; value=&quot;00 [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.Green">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.ParameterIco">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.PathIco">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.Red">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:SmallManagerSpace.Raws.Resource.Tamplate_XSL">
             <summary>
               查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;xsl:stylesheet version=&quot;1.0&quot;    xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;  xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
              &lt;xsl:output method =&quot;xml&quot; version =&quot;1.0&quot; encoding =&quot;gb2312&quot; indent=&quot;yes&quot; /&gt;
              &lt;xsl:param name=&quot;baseFile&quot;/&gt;
            
              &lt;xsl:template name=&quot;start&quot; match=&quot;node()&quot;&gt;
                &lt;xsl:copy&gt;
                  &lt;xsl:copy-of select=&quot;@*&quot; /&gt;
                  &lt;xsl:attribute name=&quot;CID&quot;&gt;
                    &lt;xsl:value-of select=&quot;generate-id(.)&quot;/&gt;
                  &lt;/xsl:attribute&gt;
                  &lt;xsl:apply-template [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="F:MasterDetailSample.LoadDataBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MasterDetailSample.LoadDataBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MasterDetailSample.LoadDataBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MasterDetailSample.frmMain.loadSkin(System.String)">
            <summary>
            加载主题皮肤
            </summary>
            <param name="skinname">皮肤文件名</param>
        </member>
        <member name="M:MasterDetailSample.frmMain.ImportFileProcessInstance(System.String)">
            <summary>
            添加文件到主界面的实例
            </summary>
            <param name="PathFileName">文件路径名称</param>
        </member>
        <member name="M:MasterDetailSample.frmMain.SaveFileToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            遍历树中节点，生成.h文件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:My.Resources.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:My.Resources.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:My.Resources.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
    </members>
</doc>
